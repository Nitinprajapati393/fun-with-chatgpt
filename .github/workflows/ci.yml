name: CI Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Download ngrok
        run: |
          wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip
          unzip ngrok-stable-linux-amd64.zip

      - name: Install ngrok Authtoken
        run: ./ngrok authtoken ${{ secrets.NGROK_AUTH_TOKEN }}
        shell: /usr/bin/bash -e {0}
        

      - name: Start Flask application
        run: |
          nohup python run.py &
          sleep 10  # Wait for the Flask app to start

      - name: Start ngrok
        run: |
          ./ngrok http 5000 > ngrok.log &
          sleep 10  # Wait for ngrok to start

      - name: Debug ngrok logs
        run: cat ngrok.log

      - name: Retrieve ngrok Tunnel Info
        id: ngrok
        run: |
          echo "Fetching ngrok tunnel information..."
          curl -s http://localhost:4040/api/tunnels > ngrok_tunnels.json
          cat ngrok_tunnels.json
          jq -r '.tunnels[0].public_url' ngrok_tunnels.json > ngrok_url.txt
          echo "Extracted ngrok URL:"
          cat ngrok_url.txt

      - name: Verify Flask application is running
        run: |
          URL=$(cat ngrok_url.txt)
          if [ -z "$URL" ]; then
            echo "ngrok URL is empty!"
            exit 1
          fi
          echo "Checking the application via ngrok URL: $URL"
          curl --fail $URL || exit 1

      - name: Run tests
        run: |
          python -m pytest -v

      - name: Stop Flask application and ngrok
        run: |
          pkill -f 'python run.py'
          pkill -f 'ngrok'